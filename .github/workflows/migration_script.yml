name: Bulk Migration Script

on:
  push:

jobs:
  bulk-migration-script:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: | 
        npm install @actions/github
        npm install xlsx

    - name: Migrate Bulk repos
      uses: actions/github-script@v6
      with:
        script: |
          // Script for migration all repos form ADO to Github mentioned in excel File.
          const XLSX = require('xlsx');
          const fs = require('fs');
          const { execSync } = require('child_process');
          
          // Load Excel file
          const workbook = XLSX.readFile('./data/DummyDataToTestADOMigration.xlsx');
          const sheetName = workbook.SheetNames[0];
          const worksheet = workbook.Sheets[sheetName];
          const failedRepos = [];

          // Convert Excel to JSON
          const excelData = XLSX.utils.sheet_to_json(worksheet);
          console.log(excelData);

          // Cloning the repositories
          for (const entry of excelData) {
            const project = entry['Project Name'];
            const repo = entry['Repository Name'];
            const cloneUrl = `https://${{ secrets.ADO_TOKEN }}@dev.azure.com/rudra099999/${project}/_git/${repo}`;
            console.log('outside try');
            //Attempt to Clone the repository
            try {
              execSync(`git clone ${cloneUrl}`);
            } catch (error) {
              console.error(`Failed to clone repository: ${project}/${repo}`);
              const errorMessage = error.message.replace(/(\r\n|\n|\r)/gm, ' '); // Replace newline characters with spaces
              console.log(errorMessage);
              failedRepos.push([`'${project}'`, `'${repo}'`, `'${errorMessage}'`]);
            }
          }

          // Output failed repositories as CSV
          const csvRows = failedRepos.map(repo => repo.join(','));
          const csvContent = ['Project Name,Repo Name,Failed Reason', ...csvRows].join('\n');
          console.log(csvContent);
          fs.writeFileSync('./failed_repos.csv', csvContent);

    - name: List cloned repositories
      run: ls

    - name: Commit and push CSV file
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add failed_repos.csv
        git commit -m "Add failed repositories CSV"
        git push origin HEAD:main
